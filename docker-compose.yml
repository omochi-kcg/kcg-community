version: "3.3"
services:
    app:
        build:
            args:
                user: user
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: app-image
        container_name: app-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - app-network

    db:
        image: mysql:5.7
        container_name: app-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./docker-compose/mysql:/docker-entrypoint-initdb.d
        networks:
            - app-network

    nginx:
        image: nginx:alpine
        container_name: app-nginx
        restart: unless-stopped
        ports:
            - ${APP_PORT}:80
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx:/etc/nginx/conf.d/
        networks:
            - app-network
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        restart: always
        environment:
            PMA_ARBITRARY: 1
            PMA_HOST: "${DB_HOST}"
            PMA_USER: "${DB_USERNAME}"
            PMA_PASSWORD: "${DB_PASSWORD}"
        ports:
            - 8080:80
        volumes:
            - ./infra/docker/phpmyadmin/sessions:/sessions
        networks:
            - app-network
        depends_on:
            - db

networks:
    app-network:
        driver: bridge
